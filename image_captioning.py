# -*- coding: utf-8 -*-
"""Image Captioning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/156f9zoMkZTC2L5S6d02gCRdPVptsJxUA
"""

pip install transformers torch pillow

pip install gradio

import torch
from transformers import BlipProcessor, BlipForConditionalGeneration
from PIL import Image
import gradio as gr

# Load pre-trained BLIP model and processor
processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")

def generate_caption(image):
    # Ensure image is in RGB mode
    if image.mode != "RGB":
        image = image.convert("RGB")

    # Preprocess the image
    inputs = processor(image, return_tensors="pt")

    # Generate caption
    outputs = model.generate(**inputs)
    caption = processor.decode(outputs[0], skip_special_tokens=True)
    return caption

# Create Gradio interface
interface = gr.Interface(
    fn=generate_caption,
    inputs=gr.Image(type="pil"),
    outputs=gr.Textbox(),
    title="Image Captioning",
    description="Upload an image and get a descriptive caption.",
)

if __name__ == "__main__":
    # Launch the Gradio interface
    interface.launch()

